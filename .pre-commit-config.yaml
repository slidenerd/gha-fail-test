# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
# https://stackoverflow.com/questions/64935598/git-pre-commit-get-all-python-files
default_language_version:
  python: python3.10
default_stages:
  - commit
  - push
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      # https://github.com/pre-commit/pre-commit-hooks#check-ast
      - description: Simply checks whether the files parse as valid python.
        id: check-ast
        types:
          - python

      # https://github.com/pre-commit/pre-commit-hooks#check-added-large-files
      - description: prevents giant files from being committed.
        id: check-added-large-files

      # https://github.com/pre-commit/pre-commit-hooks#check-json
      - description: Checks json files for parseable syntax.
        id: check-json
        types:
          - json

      # https://github.com/pre-commit/pre-commit-hooks#check-toml
      - description: Checks toml files for parseable syntax.
        id: check-toml
        types:
          - toml

      # https://github.com/pre-commit/pre-commit-hooks#check-toml
      - description: Checks yaml files for parseable syntax.
        id: check-yaml
        types:
          - yaml

      # https://github.com/pre-commit/pre-commit-hooks#end-of-file-fixer
      - description: Ensures that a file is either empty, or ends with one newline.
        id: end-of-file-fixer

      # https://github.com/pre-commit/pre-commit-hooks#trailing-whitespace
      - description: Trims trailing whitespace.
        id: trailing-whitespace

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v2.28.0
    hooks:
      - id: commitizen

  - repo: https://github.com/PyCQA/flake8
    rev: 4.0.1
    # https://flake8.pycqa.org/en/latest/user/using-hooks.html
    hooks:
      - additional_dependencies: [flake8-bugbear==22.7.1, flake8-docstrings==1.6.0]
        args: [--verbose]
        id: flake8
        description: Command-line utility for enforcing style consistency across Python projects.
        require_serial: true

  - repo: https://github.com/psf/black
    rev: 22.6.0
    # https://black.readthedocs.io/en/stable/integrations/source_version_control.html#version-control-integration
    hooks:
      - args: [src, tests, --verbose]
        description: The uncompromising Python code formatter
        id: black
        require_serial: true
